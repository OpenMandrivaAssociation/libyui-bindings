diff --git a/CMakeLists.txt b/CMakeLists.txt
index a452c7f..ad1b88c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,7 +2,7 @@
 # CMakeLists.txt for libyui-bindings
 #
 
-cmake_minimum_required(VERSION 2.6)
+cmake_minimum_required(VERSION 2.8)
 project( libyui-bindings )
 
 if(COMMAND cmake_policy)
@@ -44,6 +44,19 @@ SET(CMAKE_MODULE_PATH ${CMAKE_INSTALL_PREFIX}/share/cmake/Modules ${CMAKE_MODULE
 INCLUDE(../VERSION.cmake)
 
 SET( PACKAGE "libyui-bindings" )
+#if you need to get a git versioned package you can use cmake -DGIT_VERSION=on
+if (GIT_VERSION)
+    exec_program(
+                 "date"
+                 ${CMAKE_CURRENT_SOURCE_DIR}
+                ARGS "+%Y%m%d"
+                 OUTPUT_VARIABLE GIT_VERSION )
+
+        set (GIT_SHA1_VERSION "-${GIT_VERSION}")
+else()
+  set (GIT_SHA1_VERSION "")
+endif()
+
 SET( VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}" )
 
 IF( NOT YPREFIX )
@@ -59,7 +72,6 @@ SET(CPACK_PACKAGE_VENDOR "Novell Inc.")
 #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
 SET(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})
 SET(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})
-SET(CPACK_PACKAGE_VERSION_PATCH ${VERSION_PATCH})
 
 if (GENERATE)
     SET(CPACK_PACKAGE_CONTACT "SUSE")
@@ -80,7 +92,7 @@ else (GENERATE)
 endif (GENERATE)
 
 SET( CPACK_SOURCE_GENERATOR "TBZ2")
-SET( CPACK_SOURCE_PACKAGE_FILE_NAME "${PACKAGE}-${VERSION}" )
+SET( CPACK_SOURCE_PACKAGE_FILE_NAME "${PACKAGE}-${VERSION}${GIT_SHA1_VERSION}" )
 
 # The following components are regex's to match anywhere (unless anchored)
 # in absolute path + filename to find files or directories to be excluded
@@ -114,7 +126,7 @@ if (YUI_FOUND)
 else()
   message (STATUS "System libyui not found")
   # set them anyway for subdir CMakeLists.txt
-  SET( LIBYUI_LIBRARY yui )
+  SET( LIBYUI_LIBRARY yui yui-mga )
   SET( LIBYUI_INCLUDE_DIR /usr/include )
   SET( LIBYUI_INCLUDE_CFLAGS -I${YUI_INCLUDE_DIR} )
 endif()
